@300
D=A
@LCL
M=D
@400
D=A
@ARG
M=D
@3000
D=A
@THIS
M=D
@4000
D=A
@THAT
M=D
@256
D=A
@SP
M=D
@Sys.init
0;JMP
// Defining Main.fibonacci
(Main.fibonacci)
// Done defining
@ARG
D=M
@0
D=D+A
@R15
M=D
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
M=0
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
M=M-1
A=M
D=M
@SP
A=M+1
D=D-M
@COND_68446994062993
D;JLT
D=0
@NOT_COND_68446994062993
0;JMP
(COND_68446994062993)
D=-1
(NOT_COND_68446994062993)
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@Main.fibonacci$IF_TRUE
D;JNE
@Main.fibonacci$IF_FALSE
0;JMP
(Main.fibonacci$IF_TRUE)
@ARG
D=M
@0
D=D+A
@R15
M=D
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
M=0
// Returning Main.fibonacci
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Done returning
(Main.fibonacci$IF_FALSE)
@ARG
D=M
@0
D=D+A
@R15
M=D
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
M=0
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
M=M-1
A=M
D=M
@SP
A=M+1
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Calling Main.fibonacci
@Main.fibonacci$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.0)
// Done calling
@ARG
D=M
@0
D=D+A
@R15
M=D
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
M=0
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
M=M-1
A=M
D=M
@SP
A=M+1
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Calling Main.fibonacci
@Main.fibonacci$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.1)
// Done calling
@SP
M=M-1
M=M-1
A=M
D=M
@SP
A=M+1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Returning Main.fibonacci
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Done returning
// Defining Sys.init
(Sys.init)
// Done defining
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// Calling Main.fibonacci
@Sys.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Sys.init$ret.2)
// Done calling
(Sys.init$WHILE)
@Sys.init$WHILE
0;JMP
