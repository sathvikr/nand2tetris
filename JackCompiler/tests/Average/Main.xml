<class>
	<keyword> class </keyword>
	<classIdentifier0> Main </classIdentifier0>
	<symbol> { </symbol>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<subroutineIdentifier0> main </subroutineIdentifier0>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<varDec>
				<keyword> var </keyword>
				<identifier> Array </identifier>
				<varIdentifier0> a </varIdentifier0>
				<symbol> ; </symbol>
			</varDec>
			<varDec>
				<keyword> var </keyword>
				<keyword> int </keyword>
				<varIdentifier1> length </varIdentifier1>
				<symbol> ; </symbol>
			</varDec>
			<varDec>
				<keyword> var </keyword>
				<keyword> int </keyword>
				<varIdentifier2> i </varIdentifier2>
				<symbol> , </symbol>
				<varIdentifier3> sum </varIdentifier3>
				<symbol> ; </symbol>
			</varDec>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<varIdentifier4> length </varIdentifier4>
					<symbol> = </symbol>
					<expression>
						<term>
							<Identifier4> Keyboard </Identifier4>
							<symbol> . </symbol>
							<Identifier4> readInt </Identifier4>
							<symbol> ( </symbol>
							<expressionList>
								<expression>
									<term>
										<stringConstant> How many numbers? </stringConstant>
									</term>
								</expression>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<varIdentifier4> a </varIdentifier4>
					<symbol> = </symbol>
					<expression>
						<term>
							<Identifier4> Array </Identifier4>
							<symbol> . </symbol>
							<Identifier4> new </Identifier4>
							<symbol> ( </symbol>
							<expressionList>
								<expression>
									<term>
										<Identifier4> length </Identifier4>
									</term>
								</expression>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<varIdentifier4> i </varIdentifier4>
					<symbol> = </symbol>
					<expression>
						<term>
							<integerConstant> 0 </integerConstant>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<whileStatement>
					<keyword> while </keyword>
					<symbol> ( </symbol>
					<expression>
						<term>
							<Identifier4> i </Identifier4>
						</term>
						<symbol> &lt; </symbol>
						<term>
							<Identifier4> length </Identifier4>
						</term>
					</expression>
					<symbol> ) </symbol>
					<symbol> { </symbol>
					<statements>
						<letStatement>
							<keyword> let </keyword>
							<varIdentifier4> a </varIdentifier4>
							<symbol> [ </symbol>
							<expression>
								<term>
									<Identifier4> i </Identifier4>
								</term>
							</expression>
							<symbol> ] </symbol>
							<symbol> = </symbol>
							<expression>
								<term>
									<Identifier4> Keyboard </Identifier4>
									<symbol> . </symbol>
									<Identifier4> readInt </Identifier4>
									<symbol> ( </symbol>
									<expressionList>
										<expression>
											<term>
												<stringConstant> Enter a number: </stringConstant>
											</term>
										</expression>
									</expressionList>
									<symbol> ) </symbol>
								</term>
							</expression>
							<symbol> ; </symbol>
						</letStatement>
						<letStatement>
							<keyword> let </keyword>
							<varIdentifier4> sum </varIdentifier4>
							<symbol> = </symbol>
							<expression>
								<term>
									<Identifier4> sum </Identifier4>
								</term>
								<symbol> + </symbol>
								<term>
									<Identifier4> a </Identifier4>
									<symbol> [ </symbol>
									<expression>
										<term>
											<Identifier4> i </Identifier4>
										</term>
									</expression>
									<symbol> ] </symbol>
								</term>
							</expression>
							<symbol> ; </symbol>
						</letStatement>
						<letStatement>
							<keyword> let </keyword>
							<varIdentifier4> i </varIdentifier4>
							<symbol> = </symbol>
							<expression>
								<term>
									<Identifier4> i </Identifier4>
								</term>
								<symbol> + </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> ; </symbol>
						</letStatement>
					</statements>
					<symbol> } </symbol>
				</whileStatement>
				<doStatement>
					<keyword> do </keyword>
					<classIdentifier4> Output </classIdentifier4>
					<symbol> . </symbol>
					<subroutineIdentifier4> printString </subroutineIdentifier4>
					<symbol> ( </symbol>
					<expressionList>
						<expression>
							<term>
								<stringConstant> The average is </stringConstant>
							</term>
						</expression>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<doStatement>
					<keyword> do </keyword>
					<classIdentifier4> Output </classIdentifier4>
					<symbol> . </symbol>
					<subroutineIdentifier4> printInt </subroutineIdentifier4>
					<symbol> ( </symbol>
					<expressionList>
						<expression>
							<term>
								<Identifier4> sum </Identifier4>
							</term>
							<symbol> / </symbol>
							<term>
								<Identifier4> length </Identifier4>
							</term>
						</expression>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<returnStatement>
					<keyword> return </keyword>
					<symbol> ; </symbol>
				</returnStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
